/**
 * 两种应用方式：第一用于数据层，处理内存中保存的大量相似对象的共享数据
 * 第二用于DOM层，可以作为中央事件管理器，来避免事件处理程序附加到父容器中的每个子元素上，而是将事件处理程序附加到这个父容器上（事件委托咯？）
 * flyweight是一种经典的结构型解决方案，用于优化重复、缓存及数据共享效率较低的代码。
 * 它旨在通过与相关对象共享尽可能多的数据来减少应用程序中内存的使用。
 * 在实践中，flyweight数据共享会涉及获取多个对象使用若干相似对象或数据结构，以及将这些数据结构放到一个单一的外部对象中。可以将该对象传递给依赖这些数据的对象，而不是在每个对象中都存储相同的数据。 
 * 
 */
